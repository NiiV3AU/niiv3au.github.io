document.addEventListener("DOMContentLoaded",()=>{const copyButtons=document.querySelectorAll(".copy-btn");copyButtons.forEach((button)=>{const buttonTextSpan=button.querySelector(".button-text");if(!buttonTextSpan){console.error("Could not find “.button-text” in the button:",button);return}const originalText=buttonTextSpan.textContent;button.addEventListener("click",(event)=>{event.preventDefault();const textToCopy=button.dataset.clipboardText;if(textToCopy&&navigator.clipboard){navigator.clipboard.writeText(textToCopy).then(()=>{buttonTextSpan.textContent="Copied!";button.classList.add("copied-success");setTimeout(()=>{buttonTextSpan.textContent=originalText;button.classList.remove("copied-success")},1500)}).catch((err)=>{console.error("Error when copying to the clipboard:",err);const errorTextSpan=button.querySelector(".button-text");if(errorTextSpan){const originalColor=errorTextSpan.style.color;errorTextSpan.textContent="Error!";errorTextSpan.style.color="red";setTimeout(()=>{errorTextSpan.textContent=originalText;errorTextSpan.style.color=originalColor},2000)}})}else{console.warn("No text found to copy or clipboard API not available.")}})});const mediaQuery=window.matchMedia("(min-width: 1536px)");let cardAnimationId=null;let cardsData=[];let mouseX=window.innerWidth/2;let mouseY=window.innerHeight/2;let actionIconsData=[];let gsapPluginsRegistered=false;const animationDuration=0.35;const animationEase="power2.inOut";const focusAnimationDelay=0.2;const normalStrokeColor="#dce4ee";const hoverStrokeColor="#7dcb95";function registerGsapPluginsOnce(){if(!gsapPluginsRegistered&&typeof gsap!=="undefined"&&typeof MorphSVGPlugin!=="undefined"){gsap.registerPlugin(MorphSVGPlugin);gsapPluginsRegistered=true;console.log("GSAP MorphSVGPlugin registered.")}else if(!gsapPluginsRegistered){console.warn("GSAP or MorphSVGPlugin not found. Morphing animations will not work.")}return gsapPluginsRegistered}function updateMousePosition(e){mouseX=e.clientX;mouseY=e.clientY}function updateAllCardRects(){cardsData.forEach((data)=>{if(data.element){data.rect=data.element.getBoundingClientRect()}})}function animateCards(){cardsData.forEach((data)=>{if(!data.element||!data.rect){return}const{element,rect,isHovered}=data;const cardCenterX=rect.left+rect.width/2;const cardCenterY=rect.top+rect.height/2;const deltaX=mouseX-cardCenterX;const deltaY=mouseY-cardCenterY;const maxRotation=8;const sensitivityFactor=300;let rotateY_anim=(deltaX/sensitivityFactor)*maxRotation;let rotateX_anim=(deltaY/sensitivityFactor)* -maxRotation;rotateX_anim=Math.max(-maxRotation,Math.min(maxRotation,rotateX_anim));rotateY_anim=Math.max(-maxRotation,Math.min(maxRotation,rotateY_anim));const currentScale=isHovered?1.075:1;element.style.transform=`perspective(1000px) rotateX(${ rotateX_anim }deg) rotateY(${ rotateY_anim }deg) scale(${ currentScale })`});cardAnimationId=requestAnimationFrame(animateCards)}function setupDesktopAnimations(){console.log("Setting up desktop animations...");if(cardsData.length===0){document.querySelectorAll(".card").forEach((cardElement)=>{const cardEntry={element:cardElement,rect:cardElement.getBoundingClientRect(),isHovered:false,mouseEnterHandler:function(){cardEntry.isHovered=true},mouseLeaveHandler:function(){cardEntry.isHovered=false}};cardsData.push(cardEntry);cardElement.addEventListener("mouseenter",cardEntry.mouseEnterHandler);cardElement.addEventListener("mouseleave",cardEntry.mouseLeaveHandler)})}if(cardAnimationId===null){document.addEventListener("mousemove",updateMousePosition);window.addEventListener("scroll",updateAllCardRects,{passive:true});window.addEventListener("resize",updateAllCardRects);cardAnimationId=requestAnimationFrame(animateCards)}if(!registerGsapPluginsOnce()){return}actionIconsData=[];const currentActionIcons=document.querySelectorAll("a.skill-item-action-icon");currentActionIcons.forEach((iconLink)=>{const boxPath=iconLink.querySelector("#morphBoxPath");const arrowPath=iconLink.querySelector("#morphArrowPath");if(!boxPath||!arrowPath){console.warn("Morphing paths not found for an icon link:",iconLink);return}const normalBoxD=boxPath.getAttribute("d");const normalArrowD=arrowPath.getAttribute("d");const hoverBoxD="M21 13V19C21 20.1046 20.1046 21 19 21H5C3.89543 21 3 20.1046 3 19V5C3 3.89543 3.89543 3 5 3H11";const hoverArrowD="M21 3L15 3M21 3L12 12M21 3V9";const iconEntry={link:iconLink,boxPath,arrowPath,normalBoxD,normalArrowD,hoverBoxD,hoverArrowD,boxTween:null,arrowTween:null,colorTween:null,mouseEnterHandler:()=>{if(iconEntry.boxTween){iconEntry.boxTween.kill()}if(iconEntry.arrowTween){iconEntry.arrowTween.kill()}if(iconEntry.colorTween){iconEntry.colorTween.kill();}iconEntry.boxTween=gsap.to(iconEntry.boxPath,{duration:animationDuration,morphSVG:iconEntry.hoverBoxD,ease:animationEase});iconEntry.arrowTween=gsap.to(iconEntry.arrowPath,{duration:animationDuration,morphSVG:iconEntry.hoverArrowD,ease:animationEase});iconEntry.colorTween=gsap.fromTo([iconEntry.boxPath,iconEntry.arrowPath],{stroke:normalStrokeColor},{duration:animationDuration,stroke:hoverStrokeColor,ease:animationEase})},mouseLeaveHandler:()=>{if(iconEntry.boxTween){iconEntry.boxTween.kill()}if(iconEntry.arrowTween){iconEntry.arrowTween.kill()}if(iconEntry.colorTween){iconEntry.colorTween.kill();}iconEntry.boxTween=gsap.to(iconEntry.boxPath,{duration:animationDuration,morphSVG:iconEntry.normalBoxD,ease:animationEase});iconEntry.arrowTween=gsap.to(iconEntry.arrowPath,{duration:animationDuration,morphSVG:iconEntry.normalArrowD,ease:animationEase});iconEntry.colorTween=gsap.fromTo([iconEntry.boxPath,iconEntry.arrowPath],{stroke:hoverStrokeColor},{duration:animationDuration,stroke:normalStrokeColor,ease:animationEase})},focusHandler:()=>{if(iconEntry.boxTween){iconEntry.boxTween.kill()}if(iconEntry.arrowTween){iconEntry.arrowTween.kill()}if(iconEntry.colorTween){iconEntry.colorTween.kill();}iconEntry.boxTween=gsap.to(iconEntry.boxPath,{duration:animationDuration,morphSVG:iconEntry.hoverBoxD,ease:animationEase,delay:focusAnimationDelay});iconEntry.arrowTween=gsap.to(iconEntry.arrowPath,{duration:animationDuration,morphSVG:iconEntry.hoverArrowD,ease:animationEase,delay:focusAnimationDelay});iconEntry.colorTween=gsap.fromTo([iconEntry.boxPath,iconEntry.arrowPath],{stroke:normalStrokeColor},{duration:animationDuration,stroke:hoverStrokeColor,ease:animationEase,delay:focusAnimationDelay})},blurHandler:()=>{if(iconEntry.boxTween){iconEntry.boxTween.kill()}if(iconEntry.arrowTween){iconEntry.arrowTween.kill()}if(iconEntry.colorTween){iconEntry.colorTween.kill();}iconEntry.boxTween=gsap.to(iconEntry.boxPath,{duration:animationDuration,morphSVG:iconEntry.normalBoxD,ease:animationEase,delay:focusAnimationDelay});iconEntry.arrowTween=gsap.to(iconEntry.arrowPath,{duration:animationDuration,morphSVG:iconEntry.normalArrowD,ease:animationEase,delay:focusAnimationDelay});iconEntry.colorTween=gsap.fromTo([iconEntry.boxPath,iconEntry.arrowPath],{stroke:hoverStrokeColor},{duration:animationDuration,stroke:normalStrokeColor,ease:animationEase,delay:focusAnimationDelay})}};actionIconsData.push(iconEntry);iconLink.addEventListener("mouseenter",iconEntry.mouseEnterHandler);iconLink.addEventListener("mouseleave",iconEntry.mouseLeaveHandler);iconLink.addEventListener("focus",iconEntry.focusHandler);iconLink.addEventListener("blur",iconEntry.blurHandler)})}function teardownDesktopAnimations(){console.log("Tearing down desktop animations...");if(cardAnimationId!==null){cancelAnimationFrame(cardAnimationId);cardAnimationId=null}document.removeEventListener("mousemove",updateMousePosition);window.removeEventListener("scroll",updateAllCardRects);window.removeEventListener("resize",updateAllCardRects);cardsData.forEach((data)=>{if(data.element){data.element.style.transform="";data.element.removeEventListener("mouseenter",data.mouseEnterHandler);data.element.removeEventListener("mouseleave",data.mouseLeaveHandler)}});cardsData=[];actionIconsData.forEach((iconEntry)=>{if(iconEntry.boxTween){iconEntry.boxTween.kill()}if(iconEntry.arrowTween){iconEntry.arrowTween.kill()}if(iconEntry.colorTween){iconEntry.colorTween.kill();}if(iconEntry.boxPath){iconEntry.boxPath.setAttribute("d",iconEntry.normalBoxD);gsap.set(iconEntry.boxPath,{clearProps:"stroke"});}if(iconEntry.arrowPath){iconEntry.arrowPath.setAttribute("d",iconEntry.normalArrowD);gsap.set(iconEntry.arrowPath,{clearProps:"stroke"});}iconEntry.link.removeEventListener("mouseenter",iconEntry.mouseEnterHandler);iconEntry.link.removeEventListener("mouseleave",iconEntry.mouseLeaveHandler);iconEntry.link.removeEventListener("focus",iconEntry.focusHandler);iconEntry.link.removeEventListener("blur",iconEntry.blurHandler)});actionIconsData=[]}function handleBreakpointChange(e){if(e.matches){setupDesktopAnimations()}else{teardownDesktopAnimations()}}if(mediaQuery.matches){setupDesktopAnimations()}else{teardownDesktopAnimations()}mediaQuery.addEventListener("change",handleBreakpointChange)});
